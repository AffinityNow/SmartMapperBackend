@startuml diagram
!include style/commons.style
namespace src.main.java.com.smartmapper {
    namespace core{
        namespace domain{
            namespace model{
                class Coordinates   {
                    + X : double
                    + Y : double
                    + this(double X, double Y)
                    + getX() : double
                    + setX(double x)
                    + getY() : double
                    + setY(double y)
                }
                
                class PointInteret {
                    + name : string
                    + coordinates : Coordinates
                    + description : string
                    + this(name, Coordinates, description)
                    + getName() : string
                    + setName(string name) : void
                    + getCoordinates() : Coordinates
                    + setCoordinates(string coordinates) : void
                    + getDescription() : string
                    + setDescription(string description) : void
                }

                class Adresse {
                    + name : string
                    + lines : string
                    + cedex : string
                    + postalCode : string
                    + city : string
                    + country : string
                    + point : PointInteret
                    + this(name, lines)
                    + getName() : string
                    + setName(string name) : void
                    + getLines() : string
                    + setLines(string line1) : void
                    + getPostalCode() : postalCode
                    + setPostalCode(string postalCode) : void
                    + getCountry() : string
                    + setCountry(string country) : void
                    + getPoint() : PointInteret
                    + setPoint(PointInteret country) : void
                }

                class Categorie {
                    + id : long
                    + point : PointInteret
                    + name : String
                    + this()
                    + getName() : string
                    + setName(name: string name) : void
                    + getId() : long
                    + setId(id: long) : void
                    + getPoint() : long
                    + setPointInteret(point: PointInteret) : void
                }

                class AdresseeBuilderImpl implements src.main.java.com.smartmapper.core.domain.builder.AdresseeBuilder {
                    + point : PointInteret
                    + name : String
                    + lines : String
                    + cedex : String
                    + codePostal : String
                    + ville : String
                    + pays : String
                    + telephone : String
                    + this(name: string, lines: string)
                    + withCedex(cedex: string): AdresseeBuilder
                    + withVille(ville: string): AdresseeBuilder
                    + withPays(pays: string): AdresseeBuilder
                    + withPoint(pInteret: PointInteret): AdresseeBuilder
                    + withCodePostal(cPostal: string): AdresseeBuilder
                    + withTelephone(telephone: string): AdresseeBuilder
                    + build(): Adressee
                }
                
                class PointInteretBuilderImpl implements src.main.java.com.smartmapper.core.domain.builder.PointInteretBuilder{
                    + name : String
                    + coordonnes : Coordonnees
                    + description : String
                    + itineraire : Itineraire
                    + Adressee : Adressee
                    + categories : Set<Categorie>
                    + this(name: string, coordonnes: Coordonnees, description: string)
                    + build(): Adressee
                    + withItineraire(itineraire: Itineraire): PointInteretBuilder
                    + withAdressee(Adressee: Adressee): PointInteretBuilder
                    + withCategorie(categories: Set<Categorie>): PointInteretBuilder
                    + build(): PointInteret
                }
            }

            namespace builder {
                interface AdresseeBuilder {
                    withCedex(cedex: string): AdresseeBuilder
                    withVille(ville: string): AdresseeBuilder
                    withPays(pays: string): AdresseeBuilder
                    withPoint(pInteret: PointInteret): AdresseeBuilder
                    withCodePostal(cPostal: string): AdresseeBuilder
                    withTelephone(telephone: string): AdresseeBuilder
                    build(): Adressee
                }

                interface PointInteretBuilder {
                    withItineraire(itineraire: Itineraire): PointInteretBuilder
                    withAdressee(Adressee: Adressee): PointInteretBuilder
                    withCategorie(categories: Set<Categorie>): PointInteretBuilder
                    build(): PointInteret
                }
            }

            namespace infra{
                namespace controller{
                    class PointInteretController {
                        - service: PointInteretService
                        + this(service: PointInteretService)
                        + getAllPointInterets(): List<PointInteret>
                        + getPointInteretById(id: Long): Optionnal<PointInteret>
                        + getPointInteretByCategorie(categorie: string): List<PointInteret>
                        + getPointInteretCategoryById(id: long): Set<Categorie>
                    }
                }
                namespace dto{
                }
                namespace repository{
                    interface AdresseeRepository extends JpaRepository{}
                    interface CategorieRepository extends JpaRepository{}
                    interface CoordonneesRepository extends JpaRepository{}
                    interface PointInteretRepository extends JpaRepository{
                        findByCategories(categorie: Categorie): PointInteret
                    }
                }
                namespace service{
                    namespace serviceImpl{
                        interface PointInteretService {
                            getAll(): List<PointInteret>
                            getById(id: long): Optional<PointInteret>
                            getByCategory(categorie: string): List<PointInteret>
                            save(newPoint: PointInteret)
                            getCategoryById(id: long): Set<Categorie>
                        }

                        class PointInteretServiceImpl implements PointInteretService {
                            - repository: PointInteretRepository
                            + this()
                            + getAll(): List<PointInteret>
                            + getById(id: long): Optional<PointInteret>
                            + getByCategory(categorie: string): List<PointInteret>
                            + save(newPoint: PointInteret)
                            + getCategoryById(id: long): Set<Categorie>
                        }
                    }
                }
            }
        }
    }
    namespace exception{
    }
    namespace config{
    }
    namespace helper{
        class Helper {
            ~ {static} version: string
            - {static} setNewVersion(): void
            - {static} getVersion(): string
        }
    }
    class AppMain{}
}

src.main.java.com.smartmapper.core.domain.model.PointInteret *..> "1" src.main.java.com.smartmapper.core.domain.model.Coordinates : "contains"
src.main.java.com.smartmapper.core.domain.model.PointInteret *..> "1" src.main.java.com.smartmapper.core.domain.model.Categorie : "contains"
src.main.java.com.smartmapper.core.domain.model.Adresse *..> "1" src.main.java.com.smartmapper.core.domain.model.PointInteret : "contains"
src.main.java.com.smartmapper.core.domain.model.PointInteretBuilderImpl ..> src.main.java.com.smartmapper.core.domain.model.PointInteret: "construct"
src.main.java.com.smartmapper.core.domain.model.AdresseeBuilderImpl ..> src.main.java.com.smartmapper.core.domain.model.Adresse: "construct"

@enduml