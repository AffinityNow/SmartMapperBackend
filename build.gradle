/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.10.2'
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'

    // AsciiDoctor (doc)
    id 'org.asciidoctor.jvm.convert' version '3.2.0'
    id 'org.asciidoctor.jvm.pdf' version '3.2.0'
}

group =
        version = 1.0
sourceCompatibility =

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
}

application {
    // Define the main class for the application.
    mainClassName = 'com.smartmapper.AppMain'
}


jacoco {
    toolVersion = '0.8.6'
    reportsDir = file("${buildDir}/reports/jacoco") // this is the default
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
        html.destination = file("${buildDir}/jacocoHtml")
    }
    asciidoctor {
        sourceDir file('docs')
        sources {
            include 'main.adoc'
        }
        outputDir file('build/docs')
        outputOptions {
            backends 'pdf'
        }
    }

    asciidoctorPdf {
        theme 'very-simple'
    }
    pdfThemes {
        github 'basic', {
            organisation = 'fwilhe2'
            repository = 'corporate-theme'
            relativePath = 'resources/themes'
            branch = 'master'
            tag = '1.0.1'
            commit = '4910271e8c3964b60e186a62f3e4339ed0752714'
        }
    }
}

plugins {
    id "org.sonarqube" version "3.0"
}

sonarqube {
    properties {
        property "sonar.projectKey", "smartmapperproject_SmartMapperBackend"
    }
}